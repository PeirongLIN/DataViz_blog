[
  {
    "path": "posts/2021-06-14-dataviz-makeover-2/",
    "title": "DataViz Makeover 2",
    "description": "Data Visualization Makeover 2",
    "author": [
      {
        "name": "Peirong LIN",
        "url": "https://www.linkedin.com/in/perry-lin/"
      }
    ],
    "date": "2021-06-14",
    "categories": [],
    "contents": "\r\nMakeover an interactive plot from Merchandise Trade of Singapore\r\nThis is written as the requirements for the Visual Analytics module for MITB.\r\n1. The original data visualization\r\n\r\n2. Critiques and suggestions\r\n2.1 Clarity\r\nS/N\r\nCritiques\r\nComments\r\n1\r\nHard to find the relationship between import and export\r\nList in the tooltips to show net importers or exporters\r\n2\r\nCannot see the trend during the period of 2011 to 2020\r\nUse interactive animation to see the trend\r\n3\r\nCannot show the difference between import and export\r\nUse Tooltips to show the balance of trade\r\n2.2 Aesthetics\r\nS/N\r\nCritiques\r\nComments\r\n1\r\nToo many colors in one graph, which will confuse people\r\nChange to consistent color\r\n2\r\nSome of circles hide each other\r\nUse transparency to eliminate the overlap\r\n3\r\nThe abbreviation will make people confused sometimes\r\nAdd map to be more intuitive\r\n3. Proposed Sketch\r\n4. Data Preparation\r\n4.1 convert text to number in excel\r\nFirst, I open the Outputfile to read the data in excel, and find that all the numbers are in text format, so I change it into number.\r\n\r\nAfter that, I filter the countries and year we need, and paste them into new sheet.\r\n\r\n4.2 Data Transform using R\r\nread excel in to R\r\n\r\n\r\n\r\nimport <- readxl::read_xlsx(\"~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 2/outputFile.xlsx\",\r\n                            sheet = \"Import\",range = \"A1:DQ11\",col_names = TRUE)\r\nexport <- readxl::read_xlsx(\"~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 2/outputFile.xlsx\",\r\n                            sheet = \"Export\",range = \"A1:DQ11\",col_names = TRUE)\r\n\r\nimport\r\n\r\n\r\n# A tibble: 10 x 121\r\n   Variables `2011 Jan` `2011 Feb` `2011 Mar` `2011 Apr` `2011 May`\r\n   <chr>          <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\r\n 1 European~      3431.      3487.      4492.      4518.      4495.\r\n 2 Indonesi~   2204746    1568744    2199579    2105377    2213511 \r\n 3 Malaysia~   3860565    3532773    4578128    4311710    3789599 \r\n 4 Thailand~   1061048    1036520    1148829    1262658    1143506 \r\n 5 Japan(Th~   2799029    2457833    3593755    2661627    2442665 \r\n 6 Hong Kon~    350017     226220     345864     430938     335412 \r\n 7 Republic~   2258272    1566609    2333908    2006193    2600826 \r\n 8 Taiwan(T~   2101001    2077207    2407856    2164329    2265637 \r\n 9 Mainland~   4040360    3102081    4598678    4096396    4116579 \r\n10 United S~   3571568    3478796    4017213    4235146    4030906 \r\n# ... with 115 more variables: `2011 Jun` <dbl>, `2011 Jul` <dbl>,\r\n#   `2011 Aug` <dbl>, `2011 Sep` <dbl>, `2011 Oct` <dbl>, `2011\r\n#   Nov` <dbl>, `2011 Dec` <dbl>, `2012 Jan` <dbl>, `2012 Feb` <dbl>,\r\n#   `2012 Mar` <dbl>, `2012 Apr` <dbl>, `2012 May` <dbl>, `2012\r\n#   Jun` <dbl>, `2012 Jul` <dbl>, `2012 Aug` <dbl>, `2012 Sep` <dbl>,\r\n#   `2012 Oct` <dbl>, `2012 Nov` <dbl>, `2012 Dec` <dbl>, `2013\r\n#   Jan` <dbl>, `2013 Feb` <dbl>, `2013 Mar` <dbl>, `2013 Apr` <dbl>,\r\n#   `2013 May` <dbl>, `2013 Jun` <dbl>, `2013 Jul` <dbl>, `2013\r\n#   Aug` <dbl>, `2013 Sep` <dbl>, `2013 Oct` <dbl>, `2013 Nov` <dbl>,\r\n#   `2013 Dec` <dbl>, `2014 Jan` <dbl>, `2014 Feb` <dbl>, `2014\r\n#   Mar` <dbl>, `2014 Apr` <dbl>, `2014 May` <dbl>, `2014 Jun` <dbl>,\r\n#   `2014 Jul` <dbl>, `2014 Aug` <dbl>, `2014 Sep` <dbl>, `2014\r\n#   Oct` <dbl>, `2014 Nov` <dbl>, `2014 Dec` <dbl>, `2015 Jan` <dbl>,\r\n#   `2015 Feb` <dbl>, `2015 Mar` <dbl>, `2015 Apr` <dbl>, `2015\r\n#   May` <dbl>, `2015 Jun` <dbl>, `2015 Jul` <dbl>, `2015 Aug` <dbl>,\r\n#   `2015 Sep` <dbl>, `2015 Oct` <dbl>, `2015 Nov` <dbl>, `2015\r\n#   Dec` <dbl>, `2016 Jan` <dbl>, `2016 Feb` <dbl>, `2016 Mar` <dbl>,\r\n#   `2016 Apr` <dbl>, `2016 May` <dbl>, `2016 Jun` <dbl>, `2016\r\n#   Jul` <dbl>, `2016 Aug` <dbl>, `2016 Sep` <dbl>, `2016 Oct` <dbl>,\r\n#   `2016 Nov` <dbl>, `2016 Dec` <dbl>, `2017 Jan` <dbl>, `2017\r\n#   Feb` <dbl>, `2017 Mar` <dbl>, `2017 Apr` <dbl>, `2017 May` <dbl>,\r\n#   `2017 Jun` <dbl>, `2017 Jul` <dbl>, `2017 Aug` <dbl>, `2017\r\n#   Sep` <dbl>, `2017 Oct` <dbl>, `2017 Nov` <dbl>, `2017 Dec` <dbl>,\r\n#   `2018 Jan` <dbl>, `2018 Feb` <dbl>, `2018 Mar` <dbl>, `2018\r\n#   Apr` <dbl>, `2018 May` <dbl>, `2018 Jun` <dbl>, `2018 Jul` <dbl>,\r\n#   `2018 Aug` <dbl>, `2018 Sep` <dbl>, `2018 Oct` <dbl>, `2018\r\n#   Nov` <dbl>, `2018 Dec` <dbl>, `2019 Jan` <dbl>, `2019 Feb` <dbl>,\r\n#   `2019 Mar` <dbl>, `2019 Apr` <dbl>, `2019 May` <dbl>, `2019\r\n#   Jun` <dbl>, `2019 Jul` <dbl>, `2019 Aug` <dbl>, `2019 Sep` <dbl>,\r\n#   ...\r\n\r\nexport\r\n\r\n\r\n# A tibble: 10 x 121\r\n   Variables `2011 Jan` `2011 Feb` `2011 Mar` `2011 Apr` `2011 May`\r\n   <chr>          <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\r\n 1 European~      3277.      3340.      3499.      3251.      3152.\r\n 2 Indonesi~   4782580    3832103    4820233    4255394    4555603 \r\n 3 Malaysia~   4975537    4068292    5424046    5107121    5281074 \r\n 4 Thailand~   1667137    1306528    1636746    1459544    1501285 \r\n 5 Japan(Th~   1768806    1547430    1863655    1846185    1930247 \r\n 6 Hong Kon~   4992582    4154751    4819844    4685416    4623709 \r\n 7 Republic~   1811636    1465274    1697303    1514177    1557176 \r\n 8 Taiwan(T~   1569670    1230843    1772343    1564654    1772983 \r\n 9 Mainland~   4734758    3514313    4490891    4113327    4393900 \r\n10 United S~   2535816    2041501    2402653    2692001    2395597 \r\n# ... with 115 more variables: `2011 Jun` <dbl>, `2011 Jul` <dbl>,\r\n#   `2011 Aug` <dbl>, `2011 Sep` <dbl>, `2011 Oct` <dbl>, `2011\r\n#   Nov` <dbl>, `2011 Dec` <dbl>, `2012 Jan` <dbl>, `2012 Feb` <dbl>,\r\n#   `2012 Mar` <dbl>, `2012 Apr` <dbl>, `2012 May` <dbl>, `2012\r\n#   Jun` <dbl>, `2012 Jul` <dbl>, `2012 Aug` <dbl>, `2012 Sep` <dbl>,\r\n#   `2012 Oct` <dbl>, `2012 Nov` <dbl>, `2012 Dec` <dbl>, `2013\r\n#   Jan` <dbl>, `2013 Feb` <dbl>, `2013 Mar` <dbl>, `2013 Apr` <dbl>,\r\n#   `2013 May` <dbl>, `2013 Jun` <dbl>, `2013 Jul` <dbl>, `2013\r\n#   Aug` <dbl>, `2013 Sep` <dbl>, `2013 Oct` <dbl>, `2013 Nov` <dbl>,\r\n#   `2013 Dec` <dbl>, `2014 Jan` <dbl>, `2014 Feb` <dbl>, `2014\r\n#   Mar` <dbl>, `2014 Apr` <dbl>, `2014 May` <dbl>, `2014 Jun` <dbl>,\r\n#   `2014 Jul` <dbl>, `2014 Aug` <dbl>, `2014 Sep` <dbl>, `2014\r\n#   Oct` <dbl>, `2014 Nov` <dbl>, `2014 Dec` <dbl>, `2015 Jan` <dbl>,\r\n#   `2015 Feb` <dbl>, `2015 Mar` <dbl>, `2015 Apr` <dbl>, `2015\r\n#   May` <dbl>, `2015 Jun` <dbl>, `2015 Jul` <dbl>, `2015 Aug` <dbl>,\r\n#   `2015 Sep` <dbl>, `2015 Oct` <dbl>, `2015 Nov` <dbl>, `2015\r\n#   Dec` <dbl>, `2016 Jan` <dbl>, `2016 Feb` <dbl>, `2016 Mar` <dbl>,\r\n#   `2016 Apr` <dbl>, `2016 May` <dbl>, `2016 Jun` <dbl>, `2016\r\n#   Jul` <dbl>, `2016 Aug` <dbl>, `2016 Sep` <dbl>, `2016 Oct` <dbl>,\r\n#   `2016 Nov` <dbl>, `2016 Dec` <dbl>, `2017 Jan` <dbl>, `2017\r\n#   Feb` <dbl>, `2017 Mar` <dbl>, `2017 Apr` <dbl>, `2017 May` <dbl>,\r\n#   `2017 Jun` <dbl>, `2017 Jul` <dbl>, `2017 Aug` <dbl>, `2017\r\n#   Sep` <dbl>, `2017 Oct` <dbl>, `2017 Nov` <dbl>, `2017 Dec` <dbl>,\r\n#   `2018 Jan` <dbl>, `2018 Feb` <dbl>, `2018 Mar` <dbl>, `2018\r\n#   Apr` <dbl>, `2018 May` <dbl>, `2018 Jun` <dbl>, `2018 Jul` <dbl>,\r\n#   `2018 Aug` <dbl>, `2018 Sep` <dbl>, `2018 Oct` <dbl>, `2018\r\n#   Nov` <dbl>, `2018 Dec` <dbl>, `2019 Jan` <dbl>, `2019 Feb` <dbl>,\r\n#   `2019 Mar` <dbl>, `2019 Apr` <dbl>, `2019 May` <dbl>, `2019\r\n#   Jun` <dbl>, `2019 Jul` <dbl>, `2019 Aug` <dbl>, `2019 Sep` <dbl>,\r\n#   ...\r\n\r\neliminate Long words\r\n\r\nFor better visualization, I delete the unit followed by countries, and change to Import and Export to better distinguish in the plot.\r\n\r\n\r\nimport[1,1] <- gsub(\"(Million Dollars)\",\"Import\",import[1,1])\r\nexport[1,1] <- gsub(\"(Million Dollars)\",\"Export\",export[1,1])\r\n\r\nfor (i in 2:10){\r\n  import[i,1] <- gsub(\"(Thousand Dollars)\",\"Import\",import[i,1])\r\n  export[i,1] <- gsub(\"(Thousand Dollars)\",\"Export\",export[i,1])\r\n}\r\n\r\n\r\n\r\nswtich rows and columns\r\n\r\n\r\n\r\nimport_df <- \r\n  import %>%\r\n  pivot_longer(-Variables,names_to = 'Time', values_to = 'imports') %>%\r\n  pivot_wider(names_from = Variables, values_from  = imports) \r\nimport_df\r\n\r\n\r\n# A tibble: 120 x 11\r\n   Time  `European Union~ `Indonesia(Impo~ `Malaysia(Impor~\r\n   <chr>            <dbl>            <dbl>            <dbl>\r\n 1 2011~            3431.          2204746          3860565\r\n 2 2011~            3487.          1568744          3532773\r\n 3 2011~            4492.          2199579          4578128\r\n 4 2011~            4518.          2105377          4311710\r\n 5 2011~            4495.          2213511          3789599\r\n 6 2011~            4315           1947457          4284834\r\n 7 2011~            3414.          2113417          4235909\r\n 8 2011~            4343.          2189242          4317987\r\n 9 2011~            5125.          2036928          3921655\r\n10 2011~            4294.          2016277          4297615\r\n# ... with 110 more rows, and 7 more variables:\r\n#   `Thailand(Import)` <dbl>, `Japan(Import)` <dbl>, `Hong\r\n#   Kong(Import)` <dbl>, `Republic Of Korea(Import)` <dbl>,\r\n#   `Taiwan(Import)` <dbl>, `Mainland China(Import)` <dbl>, `United\r\n#   States(Import)` <dbl>\r\n\r\n\r\n\r\nexport_df <- \r\n  export %>%\r\n  pivot_longer(-Variables,names_to = 'Time', values_to = 'exports') %>%\r\n  pivot_wider(names_from = Variables, values_from  = exports)\r\nexport_df\r\n\r\n\r\n# A tibble: 120 x 11\r\n   Time  `European Union~ `Indonesia(Expo~ `Malaysia(Expor~\r\n   <chr>            <dbl>            <dbl>            <dbl>\r\n 1 2011~            3277.          4782580          4975537\r\n 2 2011~            3340.          3832103          4068292\r\n 3 2011~            3499.          4820233          5424046\r\n 4 2011~            3251.          4255394          5107121\r\n 5 2011~            3152.          4555603          5281074\r\n 6 2011~            3471.          4884538          5643456\r\n 7 2011~            3333.          4903149          5436669\r\n 8 2011~            3282           4815474          5720496\r\n 9 2011~            3566.          5460155          5531211\r\n10 2011~            3023.          5475134          5278617\r\n# ... with 110 more rows, and 7 more variables:\r\n#   `Thailand(Export)` <dbl>, `Japan(Export)` <dbl>, `Hong\r\n#   Kong(Export)` <dbl>, `Republic Of Korea(Export)` <dbl>,\r\n#   `Taiwan(Export)` <dbl>, `Mainland China(Export)` <dbl>, `United\r\n#   States(Export)` <dbl>\r\n\r\nchange values into same unit\r\n\r\nSince the unit of each country or region is different, I use dollars as unit and time thousand dollars or million dollars into the values.\r\n\r\n\r\nimport_df[2] <- import_df[2]*1000000\r\nexport_df[2] <- export_df[2]*1000000\r\nfor (i in 3:11){\r\n  import_df[i] <- import_df[i]*1000\r\n  export_df[i] <- export_df[i]*1000\r\n}\r\nimport_df\r\n\r\n\r\n# A tibble: 120 x 11\r\n   Time  `European Union~ `Indonesia(Impo~ `Malaysia(Impor~\r\n   <chr>            <dbl>            <dbl>            <dbl>\r\n 1 2011~       3431300000       2204746000       3860565000\r\n 2 2011~       3486600000       1568744000       3532773000\r\n 3 2011~       4492400000       2199579000       4578128000\r\n 4 2011~       4518100000       2105377000       4311710000\r\n 5 2011~       4494700000       2213511000       3789599000\r\n 6 2011~       4315000000       1947457000       4284834000\r\n 7 2011~       3413900000       2113417000       4235909000\r\n 8 2011~       4342800000       2189242000       4317987000\r\n 9 2011~       5124900000       2036928000       3921655000\r\n10 2011~       4293700000       2016277000       4297615000\r\n# ... with 110 more rows, and 7 more variables:\r\n#   `Thailand(Import)` <dbl>, `Japan(Import)` <dbl>, `Hong\r\n#   Kong(Import)` <dbl>, `Republic Of Korea(Import)` <dbl>,\r\n#   `Taiwan(Import)` <dbl>, `Mainland China(Import)` <dbl>, `United\r\n#   States(Import)` <dbl>\r\n\r\nexport_df\r\n\r\n\r\n# A tibble: 120 x 11\r\n   Time  `European Union~ `Indonesia(Expo~ `Malaysia(Expor~\r\n   <chr>            <dbl>            <dbl>            <dbl>\r\n 1 2011~       3277100000       4782580000       4975537000\r\n 2 2011~       3340500000       3832103000       4068292000\r\n 3 2011~       3498900000       4820233000       5424046000\r\n 4 2011~       3251100000       4255394000       5107121000\r\n 5 2011~       3151500000       4555603000       5281074000\r\n 6 2011~       3471300000       4884538000       5643456000\r\n 7 2011~       3333300000       4903149000       5436669000\r\n 8 2011~       3282000000       4815474000       5720496000\r\n 9 2011~       3565800000       5460155000       5531211000\r\n10 2011~       3022700000       5475134000       5278617000\r\n# ... with 110 more rows, and 7 more variables:\r\n#   `Thailand(Export)` <dbl>, `Japan(Export)` <dbl>, `Hong\r\n#   Kong(Export)` <dbl>, `Republic Of Korea(Export)` <dbl>,\r\n#   `Taiwan(Export)` <dbl>, `Mainland China(Export)` <dbl>, `United\r\n#   States(Export)` <dbl>\r\n\r\nwrite the new data frame into csv\r\n\r\n\r\n\r\nwrite.csv(import_df,file = '~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 2/import.csv')\r\nwrite.csv(export_df,file = '~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 2/export.csv')\r\n\r\n\r\n\r\n4.3 Tableau Data Prep\r\nI want to get the filter from country and time, I need extract country from the import and export. Therefore, I import the result csv from R to Tableau Data Prep.\r\nFirst, I import ‘import.csv’ and ‘export.csv’ to Tableau Data Prep.\r\n\r\nAfter that, I add a pivot table to these two datasets.\r\n\r\nAdd all the import columns in it.\r\n\r\nThen, I split the pivot names into 2 parts and rename the first one as Country.\r\n\r\nAfter finishing all the steps, I join this two sheets together and save the output as ‘Data.csv’.\r\n # 5. Step of Process\r\ndrag the Data from Tableau Data Prep into the area.\r\n\r\n * 2. Drag Export to Column and Import to Row.\r\n\r\n\r\nThe output looks like this.\r\n\r\nCalculate fields\r\n\r\nFirst, we calculate balance of trade with export-import.\r\n\r\nThen, we calculate Total trade with sum of import and export.\r\n\r\nThen, we calculate Statement.If balance of trade is larger than 0, it is Net Exporters. Otherwise, it is Net Importers.\r\n\r\nWhen I get balance of trade, I put it in the color pane.\r\n\r\nThe plot looks like this now.\r\n\r\nAnd then we drag Total_trade to size.\r\n6. Main observations\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-20T18:00:59+08:00",
    "input_file": "dataviz-makeover-2.knit.md"
  },
  {
    "path": "posts/2021-05-30-assignment-1/",
    "title": "Assignment 1",
    "description": "Data Visualization Makeover 1",
    "author": [
      {
        "name": "Peirong LIN",
        "url": "https://www.linkedin.com/in/perry-lin/"
      }
    ],
    "date": "2021-05-30",
    "categories": [],
    "contents": "\r\nMakeover a plot from Merchandise Trade of Singapore\r\nThis is written as the requirements for the Visual Analytics module for MITB.\r\nFor my first DataViz makeover, I have used the data from Merchandise Trade of Singapore , which analyses the Top 6 countries and regions export and import to Singapore.\r\n1. The original data visualization\r\n\r\nThe original plot has two main problems: 1. I cannot tell the Top 6 ranking from this picture. 2. I cannot see very clearly the difference and relationship between export and import for each country or region.\r\n2. Critiques and suggestions\r\n2.1 Clarity\r\nS/N\r\nCritiques\r\nComments\r\n1\r\nCannot distinguish Top 6 sequence from the chart\r\nSequence the order from largest to smallest\r\n2\r\nThe axis for each sub chart is different.\r\nChange to same axis that can demonstrate all six charts.\r\n3\r\nThe original data has thousand dollars as unit, but the chart didn’t show that.\r\nMention the unit in the y axis.\r\n2.2 Aesthetics\r\nS/N\r\nCritiques\r\nComments\r\n1\r\nLines with filling area is not good to see the difference between import and export.\r\nChange to normal line plot without filling the area.\r\n2\r\nSix plots don’t have the same size.\r\nChange them into same size.\r\n3\r\nThe title of x axis is not accurate.\r\nChange the title to fit with the plot.\r\n4\r\nThe original plot cannot see the difference of export and import clearly.\r\nUse color to distinguish export and import, as well as the difference.\r\n3. Proposed Design\r\n3.1 Sketch of Proposition\r\n I will put import and export for total Top 6 countries and regions, and put separately six countries and regions as the sequence of Total(import+export) ranking.\r\nMoreoever, I will compute the difference of export and import (Export-Import) as the label of tooltips in each subplots from 1 to 6.\r\n3.2. Improvment to achieve\r\nMore Information to show - I put the total overall of import and export for Top 6 countries and regions.\r\n\r\nClear plot - I use line plot to show the trend and comparison for each country or regions separately.\r\n\r\nRanking for intuitive - I use floating number to show the ranking for six countries and regions.\r\n\r\nAxises are properly labeled - I add unit for the two bigger plot, and change the name of x axis and y axis.\r\n\r\nColors are consistent throughout the whole dashboard.\r\n\r\n4. Data Visualization steps\r\nFor data preparation, I use excel, Tableau Prep and R to do the data cleaning, selection and transformation.\r\nFor data visualization, I use Tableau to finish all the steps.\r\n4.1. Data preparation\r\nFor data preparation, first I check the data in excel to ensure all the data I want is clean and clear. Then, I import all the original data to Tableau Prep to run the flow and select the data I want. After that, I import the output from Tableau Prep into R and do the data transformation. To better visualize the data, I change the Time(visualizing in Year) to row and selected countries to columns.\r\n4.1.1. convert text to number in excel\r\nFirst, I open the Outputfile to read the data in excel, and find that all the numbers are in text format, so I change it into number.\r\n\r\n4.1.2. Tableau Data Prep\r\nAfter doing 4.1.1, I import the data into Tableau Prep flow, I filter the countries and regions I want from Variables, and select the Time from 2019 to 2020 monthly basis.\r\n\r\n\r\n\r\nAfter filtering the data, I run the Output(for import) and Output2(for export) to export csv from T1 and T2.\r\n\r\nTo better do the data transform in R, I change the csv format to xlsx format manually.\r\n4.1.3. Data Transform - R\r\nread excel in to R\r\n\r\n\r\n\r\nimport <- readxl::read_xlsx(\"Imports.xlsx\",\r\n                            sheet = \"Imports\",range = \"A1:Y7\",col_names = TRUE)\r\nexport <- readxl::read_xlsx(\"Exports.xlsx\",\r\n                            sheet = \"Exports\",range = \"A1:Y7\",col_names = TRUE)\r\n\r\n\r\n\r\neliminate Long words\r\n\r\nFor better visualization, I delete the unit followed by countries, and change to Import and Export to better distinguish in the plot.\r\n\r\n\r\nfor (i in 1:6){\r\n  import[i,1] <- gsub(\"(Thousand Dollars)\",\"Import\",import[i,1])\r\n  export[i,1] <- gsub(\"(Thousand Dollars)\",\"Export\",export[i,1])\r\n}\r\n\r\n\r\n\r\nswtich rows and columns\r\n\r\n\r\n\r\nimport_df <- \r\n  import %>%\r\n  pivot_longer(-Variables,names_to = 'Time', values_to = 'imports') %>%\r\n  pivot_wider(names_from = Variables, values_from  = imports) \r\n\r\n\r\n\r\n\r\n\r\nexport_df <- \r\n  export %>%\r\n  pivot_longer(-Variables,names_to = 'Time', values_to = 'exports') %>%\r\n  pivot_wider(names_from = Variables, values_from  = exports)\r\n\r\n\r\n\r\nwrite the new data frame into csv\r\n\r\n\r\n\r\nwrite.csv(import_df,file = '~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 1/import.csv')\r\nwrite.csv(export_df,file = '~/smu/Term3/Visual Analytics-ISSS608/DataViz Makeover 1/export.csv')\r\n\r\n\r\n\r\n4.2 Data Visualization\r\nImport clean data into Tableau.\r\n\r\nCreate 6 sheets for 6 countries and regions. (The figure shown is the example of Mainland China).\r\n\r\nChange the axis starts, ends and intervals for each plot.\r\n\r\n\r\n\r\nCreate calculation field\r\nFirst, I crate the balance of trade, use the formula of Export - Import.\r\n\r\nThen, I create Favorable Trade and Unfavorable Trade, so I can separate them and use different colors for better visualization.\r\n\r\nSimilar with Favorable Trade calculation field, if balance of trade <= 0, we return balance of trade as Unfavorable Trade.\r\n\r\nAfter doing these steps to Mainland China, we do the same steps to other 5 countries and regions.\r\n5. Final Visualization\r\n\r\nData Source:Merchandise Trade of Singapore\r\nFull visualization available at Peirong Lin - Tableau Public\r\n6. Main Observations\r\nHong Kong has the maximum balance of trade among the six countries and regions, while Japan has the minumum.\r\nTo some degree, the export of Mainland China and Malaysia is related to import of theirs, and usually a month former.\r\nTo some degree, the export of United States and Taiwan is a little bit opposite to the import of theirs.\r\nBoth Mainland China and Malaysia have a big drop down in the beginning of 2020, which may be the lock down impact, (The lock down in China is Feb 2020 and Singapore in Apr 2020) while United States raises in Feb 2020 and drop quickly in Sep 2020.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-30T15:06:09+08:00",
    "input_file": "assignment-1.knit.md"
  },
  {
    "path": "posts/2021-05-22-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Peirong LIN",
        "url": "https://www.linkedin.com/in/perry-lin/"
      }
    ],
    "date": "2021-05-22",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nIn this article, we will show you how to plot a figure with multiple histograms by using ggplot2 and ggpubr packages.\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nFigure below shows the scatter plot of Tableau.\r\n\r\nHere is the screenshot of edit calculation field.\r\n\r\nNext, you will use the code chunk below to install and launch ggpubr and tidyverse in RStudio.\r\nR code\r\npackages = c(‘ggpubr’, ‘tidyverse’)\r\nfor(p in packages){library if(!require(p, character.only = T)){ install.packages(p) } library(p, character.only = T) }\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\nR code\r\nwine <- read_csv(“data/wine_quality.csv”)\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted by using ggplot() and geom_histogram() of ggplot2 package. Then, ggarrange() of ggpubr package is used to patch these histogram into a single figure to reveal the distribution of the selected variables in the wine quality data sets.\r\nRcode\r\nfa <- ggplot(data=wine, aes(x= fixed acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) va <- ggplot(data=wine, aes(x= volatile acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ca <- ggplot(data=wine, aes(x= citric acid)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) rs <- ggplot(data=wine, aes(x= residual sugar)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ch <- ggplot(data=wine, aes(x= chlorides)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) fSO2 <- ggplot(data=wine, aes(x= free sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) tSO2 <- ggplot(data=wine, aes(x= total sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) density <- ggplot(data=wine, aes(x= density)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) pH <- ggplot(data=wine, aes(x= pH)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) sulphates <- ggplot(data=wine, aes(x= sulphates)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) alcohol <- ggplot(data=wine, aes(x= alcohol)) + geom_histogram(bins=20, color=“black”, fill=“light blue”)\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-22T17:26:29+08:00",
    "input_file": "dataviz-makeover-1.knit.md"
  }
]
